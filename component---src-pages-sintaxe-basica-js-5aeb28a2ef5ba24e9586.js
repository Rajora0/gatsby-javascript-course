"use strict";(self.webpackChunkgatsby_starter_default=self.webpackChunkgatsby_starter_default||[]).push([[70],{5592:function(e,a,t){t.d(a,{Z:function(){return n}});var r=t(7294),o=t(1883);var l=e=>{let{siteTitle:a}=e;return r.createElement("header",{className:"animated-header"},r.createElement("div",{className:"logo"}),r.createElement("nav",null,r.createElement("ul",null,r.createElement("li",null,r.createElement(o.Link,{to:"/"},"Inicio")),r.createElement("li",null,r.createElement(o.Link,{to:"/sobre"},"Sobre")),r.createElement("li",null,r.createElement(o.Link,{to:"/contact-section"},"Contato")))))};var n=e=>{var a;let{children:t}=e;const n=(0,o.useStaticQuery)("3649515864");return r.createElement(r.Fragment,null,r.createElement(l,{siteTitle:(null===(a=n.site.siteMetadata)||void 0===a?void 0:a.title)||"Title"}),r.createElement("div",{style:{margin:"0 auto",maxWidth:"var(--size-content)",padding:"var(--size-gutter)"}},r.createElement("main",null,t),r.createElement("footer",{style:{marginTop:"var(--space-5)",fontSize:"var(--font-sm)"}})))}},9357:function(e,a,t){var r=t(7294),o=t(1883);a.Z=function(e){var a,t;let{description:l,title:n,children:s}=e;const{site:c}=(0,o.useStaticQuery)("63159454"),i=l||c.siteMetadata.description,m=null===(a=c.siteMetadata)||void 0===a?void 0:a.title;return r.createElement(r.Fragment,null,r.createElement("title",null,m?n+" | "+m:n),r.createElement("meta",{name:"description",content:i}),r.createElement("meta",{property:"og:title",content:n}),r.createElement("meta",{property:"og:description",content:i}),r.createElement("meta",{property:"og:type",content:"website"}),r.createElement("meta",{name:"twitter:card",content:"summary"}),r.createElement("meta",{name:"twitter:creator",content:(null===(t=c.siteMetadata)||void 0===t?void 0:t.author)||""}),r.createElement("meta",{name:"twitter:title",content:n}),r.createElement("meta",{name:"twitter:description",content:i}),s)}},2591:function(e,a,t){t.r(a),t.d(a,{Head:function(){return s}});var r=t(7294),o=t(1883),l=t(5592),n=t(9357);const s=()=>r.createElement(n.Z,{title:"Sintaxe Básica em JavaScript"});a.default=()=>r.createElement(l.Z,null,r.createElement("h1",null,"Sintaxe Básica em JavaScript"),r.createElement("p",null,"Nesta seção, exploraremos os conceitos básicos da sintaxe JavaScript. Vamos começar com variáveis, tipos de dados e operadores."),r.createElement("h2",null,"Variáveis, Tipos de Dados e Operadores"),r.createElement("p",null,"Em JavaScript, as variáveis são usadas para armazenar valores. Os tipos de dados incluem números, strings, booleanos, objetos, entre outros."),r.createElement("h2",null,"Tipos de Dados em JavaScript"),r.createElement("p",null,"JavaScript possui diversos tipos de dados que são fundamentais para a manipulação de informações. Vamos explorar alguns deles:"),r.createElement("h3",null,"1. Números (Number):"),r.createElement("p",null,"Representa valores numéricos, como inteiros ou números de ponto flutuante."),r.createElement("h3",null,"2. Strings:"),r.createElement("p",null,"Sequências de caracteres. Podem ser definidas com aspas simples ou duplas."),r.createElement("h3",null,"3. Booleanos (Boolean):"),r.createElement("p",null,"Representa um valor verdadeiro (`true`) ou falso (`false`). Usado em lógica condicional."),r.createElement("h3",null,"4. Arrays:"),r.createElement("p",null,"Coleção ordenada de valores, acessíveis por índice. Começa com índice zero."),r.createElement("h3",null,"5. Objetos:"),r.createElement("p",null,"Conjunto de pares chave-valor. Cada valor é acessado através de sua chave."),r.createElement("h3",null,"6. Null e Undefined:"),r.createElement("p",null,"`null` é usado para representar a ausência intencional de qualquer objeto de valor ou referência. `undefined` é usado para variáveis que não foram atribuídas."),r.createElement("h2",null,"Operações em JavaScript"),r.createElement("p",null,"JavaScript suporta uma variedade de operações que podem ser aplicadas a diferentes tipos de dados. Vamos explorar algumas das operações mais comuns:"),r.createElement("h3",null,"Operações Aritméticas:"),r.createElement("p",null,"Realizam cálculos matemáticos. Exemplos incluem adição (+), subtração (-), multiplicação (*) e divisão (/)."),r.createElement("h3",null,"Operações de String:"),r.createElement("p",null,"Strings podem ser concatenadas usando o operador de concatenação (+). Além disso, você pode acessar caracteres individuais em uma string usando a notação de colchetes."),r.createElement("h3",null,"Operações de Comparação:"),r.createElement("p",null,"Comparação de valores usando operadores como igual (==), estritamente igual (===), diferente (!=), estritamente diferente (!==), maior que (>), menor que (<), etc."),r.createElement("h3",null,"Operadores Lógicos:"),r.createElement("p",null,"Operadores lógicos, como AND (&&), OR (||) e NOT (!), são usados para combinar condições lógicas."),r.createElement("h3",null,"Operações de Atribuição:"),r.createElement("p",null,"O operador de atribuição (=) é usado para atribuir um valor a uma variável. Além disso, há operadores de atribuição combinados, como += e -=, que realizam uma operação e atribuem o resultado à variável."),r.createElement("h3",null,"Operações Bitwise:"),r.createElement("p",null,"Operações que manipulam os bits dos números, incluindo AND (&), OR (|), XOR (^), deslocamento para a esquerda (<<) e deslocamento para a direita (>>)."),r.createElement("h2",null,"Estruturas de Controle de Fluxo em JavaScript"),r.createElement("p",null,"As estruturas de controle de fluxo permitem que você controle o fluxo de execução do seu código JavaScript. Vamos explorar as mais comuns:"),r.createElement("h3",null,"1. If-Else:"),r.createElement("p",null,"A estrutura condicional mais básica. Executa um bloco de código se a condição especificada for verdadeira e outro bloco se for falsa. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/if...else"},"Referência do MDN"),"."),r.createElement("h3",null,"2. Switch:"),r.createElement("p",null,"Usado para avaliar uma expressão contra múltiplos casos. Cada caso executa um bloco de código correspondente. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/switch"},"Referência do MDN"),"."),r.createElement("h3",null,"3. Loops (For, While, Do-While):"),r.createElement("p",null,"Permite a execução repetida de um bloco de código enquanto a condição especificada for verdadeira. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Loops_and_iteration"},"Referência do MDN"),"."),r.createElement("h3",null,"4. Ternary Operator:"),r.createElement("p",null,"Uma forma concisa de expressar uma instrução condicional. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Conditional_Operator"},"Referência do MDN"),"."),r.createElement("h2",null,"Orientação a Objetos em JavaScript"),r.createElement("p",null,"JavaScript suporta programação orientada a objetos, permitindo a criação de objetos, classes, e herança. Vamos explorar os conceitos básicos:"),r.createElement("h3",null,"1. Objetos:"),r.createElement("p",null,"Em JavaScript, um objeto é uma coleção de propriedades, onde cada propriedade tem um nome e um valor. Propriedades podem armazenar dados ou funções. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Trabalhando_com_Objetos"},"Referência do MDN"),"."),r.createElement("h3",null,"2. Funções Construtoras e Protótipos:"),r.createElement("p",null,"Para criar objetos semelhantes, você pode usar funções construtoras e protótipos. As funções construtoras são chamadas usando a palavra-chave `new`. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype"},"Referência do MDN"),"."),r.createElement("h3",null,"3. Classes:"),r.createElement("p",null,"JavaScript introduziu classes na versão ECMAScript 2015 (ES6), simplificando a criação de objetos e herança. Classes são uma forma mais sintática de criar objetos e lidar com herança. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Classes"},"Referência do MDN"),"."),r.createElement("h3",null,"4. Herança em JavaScript:"),r.createElement("p",null,"JavaScript suporta herança através do uso de protótipos. Objetos podem herdar propriedades e métodos de outros objetos. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"},"Referência do MDN"),"."),r.createElement("h2",null,"Listas e Arrays em JavaScript"),r.createElement("p",null,"Em JavaScript, arrays são estruturas de dados que armazenam coleções de elementos. Vamos explorar como criar, manipular e acessar elementos em arrays:"),r.createElement("h3",null,"1. Criando Arrays:"),r.createElement("p",null,"Arrays podem ser criados de várias formas, incluindo a utilização de colchetes `[]` ou o construtor `Array()`. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array"},"Referência do MDN"),"."),r.createElement("h3",null,"2. Acessando Elementos:"),r.createElement("p",null,"Os elementos em um array são acessados através de índices, que começam do zero. Utilize a notação de colchetes para acessar elementos específicos. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Indexed_collections#Arrays"},"Referência do MDN"),"."),r.createElement("h3",null,"3. Adicionando e Removendo Elementos:"),r.createElement("p",null,"Utilize métodos como `push()`, `pop()`, `shift()`, e `unshift()` para adicionar ou remover elementos do início ou final de um array. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Indexed_collections#Adicionando_elementos_em_um_array"},"Referência do MDN"),"."),r.createElement("h3",null,"4. Iterando sobre Arrays:"),r.createElement("p",null,"Existem várias formas de percorrer os elementos de um array, como utilizando `for`, `forEach()`, `map()`, `filter()`, e outros métodos de iteração. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Indexed_collections#Iterando_uma_matriz"},"Referência do MDN"),"."),r.createElement("h2",null,"Tratamento de Erros em JavaScript"),r.createElement("p",null,"Em JavaScript, o tratamento de erros é uma prática essencial para lidar com situações imprevistas. Vamos explorar como você pode implementar tratamento de erros em seu código:"),r.createElement("h3",null,"1. Bloco Try-Catch:"),r.createElement("p",null,"O bloco `try` permite que você teste um bloco de código quanto a erros. Se um erro ocorrer, ele será tratado no bloco `catch`. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/try...catch"},"Referência do MDN"),"."),r.createElement("h3",null,"2. Bloco Finally:"),r.createElement("p",null,"O bloco `finally` é executado, quer ocorra um erro ou não, permitindo que você execute código de limpeza. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/try...catch#finally"},"Referência do MDN"),"."),r.createElement("h3",null,"3. Lançando Exceções:"),r.createElement("p",null,"Você pode lançar suas próprias exceções usando a palavra-chave `throw`. Isso é útil para indicar erros específicos. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/throw"},"Referência do MDN"),"."),r.createElement("h3",null,"4. Objeto Error:"),r.createElement("p",null,"O objeto `Error` é usado para representar erros em tempo de execução. Ele contém informações sobre o erro, como a mensagem de erro. ",r.createElement(o.Link,{to:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Error"},"Referência do MDN"),"."),r.createElement("h2",null,"Vídeo Tutorial"),r.createElement("div",{style:{position:"relative",paddingBottom:"56.25%",height:0}},r.createElement("iframe",{src:"https://www.youtube.com/embed/-QWGj1D636w?si=tdKTSSLbQLoSe96k",title:"Tutorial JavaScript",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameborder:"0",allowfullscreen:!0})),r.createElement("ul",null),r.createElement(o.Link,{to:"/"},"Continue sua jornada de aprendizado no nosso site principal"))}}]);
//# sourceMappingURL=component---src-pages-sintaxe-basica-js-5aeb28a2ef5ba24e9586.js.map